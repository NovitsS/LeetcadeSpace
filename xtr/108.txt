/**
 *算法题目
108、将有序数组转换为二叉搜索树
 */

//TODO:code
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    TreeNode* dfs(vector<int>& nums , int left , int right)
    {
        if(left > right)
            return NULL;
        int mid = ((right - left)>>1) + left;
        TreeNode* r = new TreeNode(nums[mid]);
        r->left = dfs(nums , left , mid - 1);
        r->right = dfs(nums , mid + 1 , right);
        return r;
    }
    
    TreeNode* sortedArrayToBST(vector<int>& nums) {
        if(nums.size() == 0)
            return NULL;
        return dfs(nums , 0 , nums.size() - 1);
    }
};