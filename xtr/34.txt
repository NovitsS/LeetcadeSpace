/**
 *算法题目
34、在排序数组中查找元素的第一个和最后一个位置
 */

//TODO:code
class Solution {
public:
    vector<int> searchRange(vector<int>& nums, int target) {
        int l1 = 0 , r1 = nums.size() - 1;
        int l2 = 0 , r2 = nums.size();
        while(l1 < r1 || l2 < r2)
        {
            int m1 = (l1 + r1)/2;
            int m2 = (l2 + r2)/2;
            //r1为找到的左边界，l2为找到的右边界
            if(l1 < r1)
                target > nums[m1]? l1 = m1 + 1 : r1 = m1;
            if(l2 < r2)
                target < nums[m2]? r2 = m2 : l2 = m2 + 1;
            //cout<<m1<<" "<<l1<<" "<<r1<<" "<<m2<<" "<<l2<<" "<<r2<<endl;
        }
        vector<int> res(2 , -1);
        if(r1 >= 0 && r1 < nums.size() && nums[r1] == target)
            res[0] = r1;
        if(l2 > 0 && l2 <= nums.size() && nums[l2 - 1] == target)
            res[1] = l2 - 1;
        return res;
    }
};