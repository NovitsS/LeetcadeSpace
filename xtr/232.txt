/**
 *算法题目
232、用栈实现队列
 */

//TODO:code
class MyQueue {
public:
    stack<int> s1;
    stack<int> s2;
    /** Initialize your data structure here. */
    MyQueue() {

    }
    
    /** Push element x to the back of queue. */
    void push(int x) {
        s1.push(x);
    }
    
    /** Removes the element from in front of queue and returns that element. */
    int pop() {
        int  k = peek();
        if(!s2.empty())
            s2.pop();
        return k;
        
    }
    
    /** Get the front element. */
    int peek() {
        if(!s2.empty())
            return s2.top();
        else
        {
            while(!s1.empty())
            {
                int k = s1.top();
                s2.push(k);
                s1.pop();
            }
            return s2.top();
        }
    }
    
    /** Returns whether the queue is empty. */
    bool empty() {
        if(s1.empty() && s2.empty())
            return true;
        return false;
    }
};

/**
 * Your MyQueue object will be instantiated and called as such:
 * MyQueue* obj = new MyQueue();
 * obj->push(x);
 * int param_2 = obj->pop();
 * int param_3 = obj->peek();
 * bool param_4 = obj->empty();
 */