/**
 *算法题目
63、不同路径II
 */

//TODO:code
class Solution {
public:
    int uniquePathsWithObstacles(vector<vector<int>>& obstacleGrid) {
        int m = obstacleGrid.size();
        if(m == 0)
            return 0;
        int n = obstacleGrid[0].size();
        if(n == 0)
            return 0;
        vector<vector<int>> res(m , vector<int>(n , 0));
        if(obstacleGrid[0][0] == 1)
            return 0;
        for(int i = 0 ; i < m ; i++)
        {
            for(int j = 0 ; j < n ; j++)
            {
                if(i == 0)
                {
                    if(j == 0)
                        res[i][j] = 1;
                    else
                        res[i][j] = obstacleGrid[i][j] ? 0 : res[i][j-1];
                }
                else if(j == 0)
                {
                    res[i][j] = obstacleGrid[i][j] ? 0 : res[i-1][j];
                }
                else
                {
                    res[i][j] = obstacleGrid[i][j] ? 0 : res[i-1][j] + res[i][j-1];
                }
            }
        }
        return res[m-1][n-1];
    }
    
};