/**
 *算法题目
109、有序链表转换二叉搜索树
 */

//TODO:code
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* findmid(ListNode* h)
    {
        ListNode *pre = h;
        ListNode *f = h , *s = h;
        while(f && f->next)
        {
            f = f->next->next;
            pre = s;
            s = s->next;
        }
        pre->next = NULL;
        return s;
    }
    TreeNode* sortedListToBST(ListNode* head) {
        if(!head)
            return NULL;
        if(!head->next)
            return new TreeNode(head->val);
        ListNode *r = findmid(head);
        TreeNode *root =  new TreeNode(r->val);
        root->left = sortedListToBST(head);
        root->right = sortedListToBST(r->next);
        return root;
    }
};