/**
 *119.杨辉三角 II
 */

//TODO:code
class Solution {
public:
    vector<int> getRow(int rowIndex) {
        int n = rowIndex + 1;
        vector<int> pre (1,1);
        vector<int> now (2,1);
        if(n == 1)
            return pre;
        if(n == 2)
            return now;
        for(int i = 2 ; i <= n ; i++)
        {
            now.erase(now.begin() , now.end());
            for(int j = 0 ; j < i ; j++)
            {
                if(j == 0 || j == i - 1)
                    now.push_back(1);
                else now.push_back(pre[j - 1] + pre[j]);
            }
            pre.assign(now.begin() , now.end());
        }
        return now;
    }
};