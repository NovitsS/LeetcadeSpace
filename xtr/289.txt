/**
 *算法题目
289、生命实现
 */

//TODO:code
class Solution {
public:
    void gameOfLife(vector<vector<int>>& board) {
        vector<vector<int>> flag;
        for(int i = 0 ; i < board.size() ; i++)
        {
            vector<int> f(board[i].size() , 0);
            for(int j = 0 ; j < board[i].size() ; j++)
            {
                int sum = 0;
                if(i > 0 && j > 0 && board[i-1][j-1] == 1)
                    sum++;
                if(i > 0 && board[i-1][j] == 1)
                    sum++;
                if(i > 0 && j < board[i].size() - 1 && board[i-1][j+1] == 1)
                    sum++;
                if(j > 0 && board[i][j-1] == 1)
                    sum++;
                if(j < board[i].size() - 1 && board[i][j+1] == 1)
                    sum++;
                if(i < board.size() - 1 && j > 0 && board[i+1][j-1] == 1) 
                    sum++;
                if(i < board.size() - 1 && board[i+1][j] == 1)
                    sum++;
                if(i < board.size() - 1 && j < board[i].size() - 1 && board[i+1][j+1] == 1)
                    sum++;
                if(board[i][j] == 1 && sum < 2)
                    f[j] = 1;
                else if(board[i][j] == 1 && sum >= 2 && sum <= 3)
                    f[j] = 0;
                else if(board[i][j] == 1 && sum > 3)
                    f[j] = 1;
                else if(board[i][j] == 0 && sum == 3)
                    f[j] = 1;
                else f[j] = 0;
            }
            flag.push_back(f);
        }
        for(int i = 0 ; i < board.size() ; i++)
        {
            for(int j = 0 ; j < board[i].size() ; j++)
            {
                board[i][j] ^= flag[i][j];
            }
        }
    }
};