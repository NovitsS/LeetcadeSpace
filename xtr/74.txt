/**
 *算法题目
74.搜索二维矩阵
 */

//TODO:code
class Solution {
public:
    bool searchMatrix(vector<vector<int>>& matrix, int target) {
        int m = matrix.size();
        if(m == 0)
            return false;
        int n = matrix[0].size();
        if(n == 0 || matrix[0][0] > target)
            return false;
        int i;
        for(i = 0 ; i < m ; i++)
        {
            if(matrix[i][0] == target || matrix[i][n - 1] == target)
                return true;
            else if(target > matrix[i][0] && target < matrix[i][n - 1])
                break;
        }
        if(i >= m)
            return false;
        int base = 1 , top = n - 2;
        int mid = (base + top)/2;
        while(base <= top)
        {
            if(matrix[i][mid] == target)
                return true;
            else if(matrix[i][mid] > target)
                top = mid - 1;
            else if(matrix[i][mid] < target)
                base = mid + 1;
            mid = (base + top)/2;
        }
        return false;
    }
};