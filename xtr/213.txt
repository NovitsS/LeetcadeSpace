/**
 *算法题目
213、打家劫舍II
 */

//TODO:code
class Solution {
public:
    int rob(vector<int>& nums) {
        if(nums.size() == 0)
            return 0;
        if(nums.size() == 1)
            return nums[0];
        vector<int> dp1(nums.size() , 0); //不取最后一个
        vector<int> dp2(nums.size() , 0); //不取第一个
        dp1[1] = nums[0];
        dp2[1] = nums[1];
        for(int i = 2 ; i < nums.size() ; i++)
            dp1[i] = max(dp1[i-1] , dp1[i-2] + nums[i-1]);
        for(int i = 2 ; i < nums.size() ; i++)
            dp2[i] = max(dp2[i-1] , dp2[i-2] + nums[i]);
        return max(dp1[dp1.size() - 1] , dp2[dp2.size() - 1]);
        
    }
};